// Code generated by protoc-gen-go. DO NOT EDIT.
// source: port.proto

package portpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Port struct {
	Abbreviation         string    `protobuf:"bytes,1,opt,name=abbreviation,proto3" json:"abbreviation,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coordinates          []float64 `protobuf:"fixed64,3,rep,packed,name=coordinates,proto3" json:"coordinates,omitempty"`
	City                 string    `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Province             string    `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	Country              string    `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Alias                []string  `protobuf:"bytes,7,rep,name=alias,proto3" json:"alias,omitempty"`
	Regions              []string  `protobuf:"bytes,8,rep,name=regions,proto3" json:"regions,omitempty"`
	Timezone             string    `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Unlocs               []string  `protobuf:"bytes,10,rep,name=unlocs,proto3" json:"unlocs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{0}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetAbbreviation() string {
	if m != nil {
		return m.Abbreviation
	}
	return ""
}

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Port) GetCoordinates() []float64 {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *Port) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Port) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Port) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Port) GetAlias() []string {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Port) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *Port) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Port) GetUnlocs() []string {
	if m != nil {
		return m.Unlocs
	}
	return nil
}

type ImportResponse struct {
	NumberInserted       int32    `protobuf:"varint,1,opt,name=number_inserted,json=numberInserted,proto3" json:"number_inserted,omitempty"`
	NumberUpdated        int32    `protobuf:"varint,2,opt,name=number_updated,json=numberUpdated,proto3" json:"number_updated,omitempty"`
	EncounterErrors      bool     `protobuf:"varint,3,opt,name=encounter_errors,json=encounterErrors,proto3" json:"encounter_errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportResponse) Reset()         { *m = ImportResponse{} }
func (m *ImportResponse) String() string { return proto.CompactTextString(m) }
func (*ImportResponse) ProtoMessage()    {}
func (*ImportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{1}
}

func (m *ImportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportResponse.Unmarshal(m, b)
}
func (m *ImportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportResponse.Marshal(b, m, deterministic)
}
func (m *ImportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportResponse.Merge(m, src)
}
func (m *ImportResponse) XXX_Size() int {
	return xxx_messageInfo_ImportResponse.Size(m)
}
func (m *ImportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportResponse proto.InternalMessageInfo

func (m *ImportResponse) GetNumberInserted() int32 {
	if m != nil {
		return m.NumberInserted
	}
	return 0
}

func (m *ImportResponse) GetNumberUpdated() int32 {
	if m != nil {
		return m.NumberUpdated
	}
	return 0
}

func (m *ImportResponse) GetEncounterErrors() bool {
	if m != nil {
		return m.EncounterErrors
	}
	return false
}

type GetPortRequest struct {
	Abbreviation         string   `protobuf:"bytes,1,opt,name=abbreviation,proto3" json:"abbreviation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPortRequest) Reset()         { *m = GetPortRequest{} }
func (m *GetPortRequest) String() string { return proto.CompactTextString(m) }
func (*GetPortRequest) ProtoMessage()    {}
func (*GetPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{2}
}

func (m *GetPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortRequest.Unmarshal(m, b)
}
func (m *GetPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortRequest.Marshal(b, m, deterministic)
}
func (m *GetPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortRequest.Merge(m, src)
}
func (m *GetPortRequest) XXX_Size() int {
	return xxx_messageInfo_GetPortRequest.Size(m)
}
func (m *GetPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortRequest proto.InternalMessageInfo

func (m *GetPortRequest) GetAbbreviation() string {
	if m != nil {
		return m.Abbreviation
	}
	return ""
}

func init() {
	proto.RegisterType((*Port)(nil), "portpb.Port")
	proto.RegisterType((*ImportResponse)(nil), "portpb.ImportResponse")
	proto.RegisterType((*GetPortRequest)(nil), "portpb.GetPortRequest")
}

func init() { proto.RegisterFile("port.proto", fileDescriptor_729c3d36e9010a8e) }

var fileDescriptor_729c3d36e9010a8e = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x8a, 0xdb, 0x30,
	0x10, 0x86, 0xe3, 0x38, 0x71, 0x9c, 0x49, 0x9a, 0x94, 0xa1, 0x04, 0x91, 0x93, 0x31, 0x94, 0xba,
	0x87, 0xe6, 0x90, 0xf6, 0x09, 0x0a, 0x25, 0xe4, 0x16, 0x5c, 0x7a, 0xe9, 0x25, 0xd8, 0xce, 0x50,
	0x04, 0xb1, 0xe4, 0x4a, 0x72, 0x20, 0xfb, 0x0a, 0x0b, 0xfb, 0xcc, 0x8b, 0x24, 0x3b, 0xac, 0x6f,
	0x7b, 0x9b, 0xff, 0x9b, 0xf9, 0x2d, 0xeb, 0xd7, 0x00, 0x34, 0x52, 0x99, 0x5d, 0xa3, 0xa4, 0x91,
	0x18, 0xd9, 0xba, 0x29, 0xd3, 0x97, 0x31, 0x4c, 0x4e, 0x52, 0x19, 0x4c, 0x61, 0x59, 0x94, 0xa5,
	0xa2, 0x1b, 0x2f, 0x0c, 0x97, 0x82, 0x05, 0x49, 0x90, 0xcd, 0xf3, 0x01, 0x43, 0x84, 0x89, 0x28,
	0x6a, 0x62, 0x63, 0xd7, 0x73, 0x35, 0x26, 0xb0, 0xa8, 0xa4, 0x54, 0x17, 0x2e, 0x0a, 0x43, 0x9a,
	0x85, 0x49, 0x98, 0x05, 0xf9, 0x5b, 0x64, 0x5d, 0x15, 0x37, 0x77, 0x36, 0xf1, 0x2e, 0x5b, 0xe3,
	0x16, 0xe2, 0x46, 0xc9, 0x1b, 0x17, 0x15, 0xb1, 0xa9, 0xe3, 0x0f, 0x8d, 0x0c, 0x66, 0x95, 0x6c,
	0x85, 0x51, 0x77, 0x16, 0xb9, 0x56, 0x2f, 0xf1, 0x13, 0x4c, 0x8b, 0x2b, 0x2f, 0x34, 0x9b, 0x25,
	0x61, 0x36, 0xcf, 0xbd, 0xb0, 0xf3, 0x8a, 0xfe, 0x71, 0x29, 0x34, 0x8b, 0x1d, 0xef, 0xa5, 0x3d,
	0xc5, 0xf0, 0x9a, 0x9e, 0xa4, 0x20, 0x36, 0xf7, 0xa7, 0xf4, 0x1a, 0x37, 0x10, 0xb5, 0xe2, 0x2a,
	0x2b, 0xcd, 0xc0, 0x99, 0x3a, 0x95, 0x3e, 0x07, 0xb0, 0x3a, 0xd6, 0x36, 0x9d, 0x9c, 0x74, 0x23,
	0x85, 0x26, 0xfc, 0x02, 0x6b, 0xd1, 0xd6, 0x25, 0xa9, 0x33, 0x17, 0x9a, 0x94, 0xa1, 0x8b, 0x4b,
	0x67, 0x9a, 0xaf, 0x3c, 0x3e, 0x76, 0x14, 0x3f, 0x43, 0x47, 0xce, 0x6d, 0x73, 0x29, 0xec, 0xdc,
	0xd8, 0xcd, 0x7d, 0xf0, 0xf4, 0x8f, 0x87, 0xf8, 0x15, 0x3e, 0x92, 0x70, 0x77, 0x22, 0x75, 0x26,
	0xa5, 0xa4, 0xb2, 0xb9, 0x05, 0x59, 0x9c, 0xaf, 0x1f, 0xfc, 0x97, 0xc3, 0xe9, 0x0f, 0x58, 0x1d,
	0xc8, 0x9c, 0xdc, 0xdf, 0xfc, 0x6f, 0x49, 0xbf, 0xeb, 0x9d, 0xf6, 0x0d, 0x2c, 0xac, 0xe5, 0x37,
	0xa9, 0x1b, 0xaf, 0x08, 0xbf, 0x41, 0x78, 0x20, 0x83, 0x9b, 0x9d, 0x7f, 0xf3, 0xdd, 0xf0, 0x8b,
	0xdb, 0x65, 0xcf, 0x2d, 0x4c, 0x47, 0xb8, 0x87, 0xc8, 0x07, 0x80, 0x83, 0xce, 0xf6, 0xe1, 0x1f,
	0xc6, 0x93, 0x8e, 0xb2, 0xe0, 0x67, 0xfc, 0xb7, 0x5b, 0xa8, 0x32, 0x72, 0xfb, 0xf5, 0xfd, 0x35,
	0x00, 0x00, 0xff, 0xff, 0x72, 0x2a, 0x58, 0x8b, 0x6d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PortServiceClient is the client API for PortService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortServiceClient interface {
	Get(ctx context.Context, in *GetPortRequest, opts ...grpc.CallOption) (*Port, error)
	Import(ctx context.Context, opts ...grpc.CallOption) (PortService_ImportClient, error)
}

type portServiceClient struct {
	cc *grpc.ClientConn
}

func NewPortServiceClient(cc *grpc.ClientConn) PortServiceClient {
	return &portServiceClient{cc}
}

func (c *portServiceClient) Get(ctx context.Context, in *GetPortRequest, opts ...grpc.CallOption) (*Port, error) {
	out := new(Port)
	err := c.cc.Invoke(ctx, "/portpb.PortService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portServiceClient) Import(ctx context.Context, opts ...grpc.CallOption) (PortService_ImportClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PortService_serviceDesc.Streams[0], "/portpb.PortService/Import", opts...)
	if err != nil {
		return nil, err
	}
	x := &portServiceImportClient{stream}
	return x, nil
}

type PortService_ImportClient interface {
	Send(*Port) error
	CloseAndRecv() (*ImportResponse, error)
	grpc.ClientStream
}

type portServiceImportClient struct {
	grpc.ClientStream
}

func (x *portServiceImportClient) Send(m *Port) error {
	return x.ClientStream.SendMsg(m)
}

func (x *portServiceImportClient) CloseAndRecv() (*ImportResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ImportResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PortServiceServer is the server API for PortService service.
type PortServiceServer interface {
	Get(context.Context, *GetPortRequest) (*Port, error)
	Import(PortService_ImportServer) error
}

// UnimplementedPortServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPortServiceServer struct {
}

func (*UnimplementedPortServiceServer) Get(ctx context.Context, req *GetPortRequest) (*Port, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPortServiceServer) Import(srv PortService_ImportServer) error {
	return status.Errorf(codes.Unimplemented, "method Import not implemented")
}

func RegisterPortServiceServer(s *grpc.Server, srv PortServiceServer) {
	s.RegisterService(&_PortService_serviceDesc, srv)
}

func _PortService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portpb.PortService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortServiceServer).Get(ctx, req.(*GetPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortService_Import_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PortServiceServer).Import(&portServiceImportServer{stream})
}

type PortService_ImportServer interface {
	SendAndClose(*ImportResponse) error
	Recv() (*Port, error)
	grpc.ServerStream
}

type portServiceImportServer struct {
	grpc.ServerStream
}

func (x *portServiceImportServer) SendAndClose(m *ImportResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *portServiceImportServer) Recv() (*Port, error) {
	m := new(Port)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PortService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "portpb.PortService",
	HandlerType: (*PortServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _PortService_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Import",
			Handler:       _PortService_Import_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "port.proto",
}
